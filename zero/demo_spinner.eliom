(* This file was generated by Ocsigen Start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

(* Spinner demo *)

(* Service for this demo *)
let%server service =
  Eliom_service.create
    ~path:(Eliom_service.Path ["demo-spinner"])
    ~meth:(Eliom_service.Get Eliom_parameter.unit)
    ()

(* Make service available on the client *)
let%client service = ~%service

(* Name for demo menu *)
let%shared name = "Spinner"

(* Class for the page containing this demo (for internal use) *)
let%shared page_class = "os-page-demo-spinner"

(* Build the spinner *)
let%client make_spinner () =
  (* [Ot_spinner.with_spinner_no_lwt] accepts an Lwt thread "slowly"
     producing HTML content *)
  Ot_spinner.with_spinner_no_lwt
    (* sleep for 5 seconds to simulate a delay, then return content *)
    (let%lwt () = Lwt_js.sleep 5. in
     Lwt.return Eliom_content.Html.D.[
       pcdata "The content is ready. ";
       pcdata "This message has replaced the spinner"
     ])

(* Page for this demo *)
let%shared page () =
  Lwt.return Eliom_content.Html.[
    F.p [ F.pcdata "This is a demo of the Ocsigen Toolkit spinner widget."]
  ; F.p [ F.pcdata "We use this widget to integrate into the page an HTML \
                    fragment that takes a long time to produce, e.g., \
                    because of a slow server call." ]
  ; F.p [ F.pcdata "We initially display a spinner. We replace the spinner \
                    with the actual content when the content is ready." ]
  ; F.p [ F.pcdata "For the demo we just sleep for 5 seconds to simulate \
                    waiting for the content." ]
  ; F.p [ F.pcdata "The spinner is generated client-side." ]
  ; C.node [%client (make_spinner () : [> `Div] Eliom_content.Html.elt) ]
  ]
