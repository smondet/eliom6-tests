(* This file was generated by Ocsigen Start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

(** This module defines the default template for application pages *)


(** [os_header ?user ()] defines the header for all pages.
    In this template, it's a userbox and the user name is displayed. *)
let%shared os_header ?user () = Eliom_content.Html.F.(
  let%lwt user_box = Os_user_view.user_box ?user () in
  Lwt.return (
    header ~a:[a_class ["os-page-header"]]
      [ a ~a:[a_class ["os-page-header-app-name"]]
          ~service:Os_services.main_service
          [ pcdata Zero_base.displayed_app_name ]
          ()
      ; user_box
      ]
  )
)

(** [os_footer ()] defines a footer for the page. *)
let%shared os_footer () = Eliom_content.Html.F.(
  footer ~a:[a_class ["os-page-footer"]] [
    p [
      pcdata "This application has been generated using ";
      a ~service:Zero_services.os_github_service
        [ pcdata "Ocsigen Start" ] ();
      pcdata " and uses the ";
      a ~service:Zero_services.ocsigen_service
        [ pcdata "Ocsigen" ] ();
      pcdata " technology.";
    ]
  ]
)

(** RPC for get_wrong_pdata. See {!Os_msg.wrong_pdata} for more information *)
let%server get_wrong_pdata () =
  Lwt.return @@ Eliom_reference.Volatile.get Os_msg.wrong_pdata

let%client get_wrong_pdata =
  ~%(Eliom_client.server_function [%derive.json : unit] get_wrong_pdata)

(** [connected_welcome_box ()] creates a welcome box. *)
let%shared connected_welcome_box () = Eliom_content.Html.F.(
  let%lwt wrong_pdata = get_wrong_pdata () in
  let info, ((fn, ln), (p1, p2)) =
    match wrong_pdata with
    | None ->
      p [
        pcdata "Your personal information has not been set yet.";
        br ();
        pcdata "Please take time to enter your name and to set a password."
      ], (("", ""), ("", ""))
    | Some wpd -> p [pcdata "Wrong data. Please fix."], wpd
  in
  Lwt.return @@
    div ~a:[a_class ["os-welcome-box"]] [
      div [h2 [pcdata ("Welcome!")]; info];
      Os_user_view.information_form
        ~firstname:fn ~lastname:ln
        ~password1:p1 ~password2:p2
        ()
    ]
)

let%shared get_user_data = function
  | None ->
    Lwt.return None
  | Some myid ->
    let%lwt u = Os_user_proxy.get_data myid in
    Lwt.return (Some u)

(* [page userid_o content] returns a page personalized for the user with id
   [myid_o] and with the content [content]. It adds a header, a footer,
   and a drawer menu.
   If the user profile is not completed, a connected welcome box is added. *)
let%shared page ?html_a ?a ?title ?head myid_o content =
  let%lwt me = get_user_data myid_o in
  let%lwt content = match me with
    | Some me when not (Os_user.is_complete me) ->
      let%lwt cwb = connected_welcome_box () in
      Lwt.return @@ cwb :: content
    | _ ->
      Lwt.return @@ content
  in
  let%lwt h = os_header ?user:me () in
  Lwt.return
    (Os_page.content ?html_a ?a ?title ?head
         [ h
         ; Eliom_content.Html.F.(div ~a:[a_class ["os-body"]] content)
         ; os_footer ()
         ; Zero_drawer.make ?user:me ()
         ])
